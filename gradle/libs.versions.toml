[versions]
kotlin = "1.8.20"
ksp = "1.8.20-1.0.10"

coroutines = "1.6.4"

android-gradle-plugin = "7.4.2"
# has to stay at below 2.6 until appyx gets patched to support new LifecycleOwner
androidx-lifecycle = "2.5.1"
androidx-activity = "1.7.0"
androidx-navigation = "2.5.3"
room = "2.5.0"
dagger = "2.45"
paging = "3.1.1"

coil = "2.2.2"
ktor = "2.2.2"

compose-bom = "2023.04.00"
compose-compiler = "1.4.5"

media3 = "1.0.0"

mockk = "1.13.3"

# Third party navigation
simple-stack = "2.7.0"
simple-stack-extensions = "2.3.0"
appyx = "1.2.0"


[libraries]
# AndroidX
androidx-core = { module = "androidx.core:core-ktx", version = "1.9.0" }
androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.6.0" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.4" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version = "1.5.5" }

# KSP
ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

# Navigation
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidx-navigation" }
androidx-navigation-safeargs = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "androidx-navigation" }

# Android lifecycle
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }

# Coroutines
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Material
material-material = { module = "com.google.android.material:material", version = "1.8.0" }

# Room
room-room = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
# Kotlin Extensions and Coroutines support for Room
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Detect memory leaks
square-leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version = "2.10" }

# Preferences Datastore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version = "1.0.0" }

# Paging 3
# For runtime use
paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
# For testing
paging-common = { module = "androidx.paging:paging-common", version.ref = "paging" }
# Compose
paging-compose = { module = "androidx.paging:paging-compose", version = "1.0.0-alpha17" }

# Dagger
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

# Hilt
dagger-hilt = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }

# JavaX inject (to not put dagger into utils module)
javax-inject = "javax.inject:javax.inject:1"

# Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Kotlin Serialization
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.4.1" }

# Compose
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-icons = { module = "androidx.compose.material:material-icons-extended" }

# Appyx (Compose navigation, but good)
appyx-core = { module = "com.bumble.appyx:core", version.ref = "appyx" }
# Test rules and utility classes for testing on Android
appyx-testing-ui-activity = { module = "com.bumble.appyx:testing-ui-activity", version.ref = "appyx" }
appyx-testing-ui = { module = "com.bumble.appyx:testing-ui", version.ref = "appyx" }
# Utility classes for unit testing
appyx-testing-unit = { module = "com.bumble.appyx:testing-unit-common", version.ref = "appyx" }
# Test rules and utility classes for unit testing using JUnit4
appyx-testing-junit4 = { module = "com.bumble.appyx:testing-ui", version.ref = "appyx" }

# Simple stack
simple-stack = { module = "com.github.Zhuinden:simple-stack", version.ref = "simple-stack" }
simple-stack-extensions-core = { module = "com.github.Zhuinden.simple-stack-extensions:core-ktx", version.ref = "simple-stack-extensions" }
simple-stack-extensions-fragments = { module = "com.github.Zhuinden.simple-stack-extensions:fragments", version.ref = "simple-stack-extensions" }
simple-stack-extensions-fragments-ktx = { module = "com.github.Zhuinden.simple-stack-extensions:fragments-ktx", version.ref = "simple-stack-extensions" }
simple-stack-extensions-navigator-ktx = { module = "com.github.Zhuinden.simple-stack-extensions:navigator-ktx", version.ref = "simple-stack-extensions" }
simple-stack-extensions-services = { module = "com.github.Zhuinden.simple-stack-extensions:services", version.ref = "simple-stack-extensions" }
simple-stack-extensions-services-ktx = { module = "com.github.Zhuinden.simple-stack-extensions:services-ktx", version.ref = "simple-stack-extensions" }

# Desugaring
core-desugaring = { module = "com.android.tools:desugar_jdk_libs", version = "2.0.3" }

# Media3
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }

viewBindingDelegate = { module = "com.github.kirich1409:viewbindingpropertydelegate-noreflection", version = "1.5.9" }

result = { module = "com.michael-bull.kotlin-result:kotlin-result", version = "1.1.17" }

# -- Networking stuff --
# OkHttp
square-okhttp = { module = "com.squareup.okhttp3:okhttp", version = "5.0.0-alpha.10" }

# Ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }

# Testing
junit = { module = "junit:junit", version = "4.13.2" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }
turbine = { module = "app.cash.turbine:turbine", version = "0.12.1" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version = "1.6.4" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version = "1.1.5" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }

# Dependencies of the included build-logic
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }


[bundles]
navigation = ["androidx-navigation-fragment-ktx", "androidx-navigation-ui-ktx"]
lifecycle = ["androidx-lifecycle-viewmodel", "androidx-lifecycle-ktx"]
lifecycleCompose = ["androidx-lifecycle-viewmodel-compose", "androidx-lifecycle-compose"]
room = ["room-room", "room-ktx"]
ktor = ["ktor-core", "ktor-cio", "ktor-negotiation", "ktor-serialization", "ktor-serialization-kotlinx-json", "ktor-websockets"]
media3 = ["media3-ui", "media3-session", "media3-exoplayer"]

testSuite = ["junit", "mockk-android", "mockk-agent", "turbine", "coroutines-test"]
androidTestSuite = ["androidx-test-ext-junit", "androidx-test-espresso-core"]



[plugins]
# Android plugin
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }

# Gradle version plugin
benmanes-versions = { id = "com.github.ben-manes.versions", version = "0.46.0" }

# Kotlin plugin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

# KSP
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Hilt
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }

# Kotlin Serialization
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Parcelize
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

android-safeargs = { id = "androidx.navigation.safeargs.kotlin", version.ref = "androidx-navigation" }
